{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Joakim\\\\wailnofront\\\\pages\\\\epk.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"*[_type == \\\"epk\\\" && publishedAt < now()]{\\n  title,\\n  body\\n}\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n// epk.js\nimport Link from 'next/link';\nimport groq from 'groq';\nimport client from '../client';\nimport { propTypes } from '@sanity/block-content-to-react'; //styles\n//import './epk.sass';\n\nvar Index = function Index(props) {\n  var _props$epk = props.epk,\n      epk = _props$epk === void 0 ? \"\" : _props$epk;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, \"title \", title);\n};\n\n_c = Index;\nvar query = groq(_templateObject());\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return client.fetch(query);\n\n        case 2:\n          _context.t0 = _context.sent;\n          return _context.abrupt(\"return\", {\n            posts: _context.t0\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/Users/Joakim/wailnofront/pages/epk.js"],"names":["Link","groq","client","propTypes","Index","props","epk","title","query","getInitialProps","fetch","posts"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,SAAT,QAA0B,gCAA1B,C,CAEA;AACA;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AAAA,mBACDA,KADC,CACdC,GADc;AAAA,MACdA,GADc,2BACR,EADQ;AAGrB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACSC,KADT,CADF;AAKH,CARD;;KAAMH,K;AASN,IAAMI,KAAK,GAAGP,IAAH,mBAAX;AAIAG,KAAK,CAACK,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACTP,MAAM,CAACQ,KAAP,CAAaF,KAAb,CADS;;AAAA;AAAA;AAAA;AACtBG,YAAAA,KADsB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAIA,eAAeP,KAAf","sourcesContent":["// epk.js\r\nimport Link from 'next/link';\r\nimport groq from 'groq';\r\nimport client from '../client';\r\nimport { propTypes } from '@sanity/block-content-to-react';\r\n\r\n//styles\r\n//import './epk.sass';\r\n\r\nconst Index = (props) => {\r\n    const {epk = \"\" } = props;\r\n\r\n    return (\r\n      <div>\r\n        title {title}\r\n      </div>\r\n    )\r\n}\r\nconst query = groq`*[_type == \"epk\" && publishedAt < now()]{\r\n  title,\r\n  body\r\n}`\r\nIndex.getInitialProps = async () => ({\r\n  posts: await client.fetch(query)\r\n})\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}