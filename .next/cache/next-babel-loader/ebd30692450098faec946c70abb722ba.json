{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joakim\\\\wailnofront\\\\pages\\\\post\\\\[slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// post.js\nimport client from '../../client';\n\nconst Post = props => {\n  const {\n    title = 'Missing title',\n    name = 'Missing name'\n  } = props;\n  return __jsx(\"article\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, title), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, \"By \", name));\n};\n\nPost.getInitialProps = async function (context) {\n  // It's important to default the slug so that it doesn't return \"undefined\"\n  const {\n    slug = \"\"\n  } = context.query;\n  return await client.fetch(`\n    *[_type == \"post\" && slug.current == $slug][0]{title, \"name\": author->name}\n  `, {\n    slug\n  });\n};\n\nexport default Post;","map":{"version":3,"sources":["C:/Users/Joakim/wailnofront/pages/post/[slug].js"],"names":["client","Post","props","title","name","getInitialProps","context","slug","query","fetch"],"mappings":";;;AAAA;AACA,OAAOA,MAAP,MAAmB,cAAnB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,QAAM;AAAEC,IAAAA,KAAK,GAAG,eAAV;AAA2BC,IAAAA,IAAI,GAAG;AAAlC,MAAqDF,KAA3D;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,KAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAUC,IAAV,CAFF,CADF;AAMD,CARD;;AAUAH,IAAI,CAACI,eAAL,GAAuB,gBAAeC,OAAf,EAAwB;AAC7C;AACA,QAAM;AAAEC,IAAAA,IAAI,GAAG;AAAT,MAAgBD,OAAO,CAACE,KAA9B;AACA,SAAO,MAAMR,MAAM,CAACS,KAAP,CAAc;;GAAd,EAEV;AAAEF,IAAAA;AAAF,GAFU,CAAb;AAGD,CAND;;AAQA,eAAeN,IAAf","sourcesContent":["// post.js\r\nimport client from '../../client';\r\n\r\nconst Post = (props) => {\r\n  const { title = 'Missing title', name = 'Missing name' } = props; \r\n  return (\r\n    <article>\r\n      <h1>{title}</h1>\r\n      <span>By {name}</span>\r\n    </article>\r\n  )\r\n}\r\n\r\nPost.getInitialProps = async function(context) {\r\n  // It's important to default the slug so that it doesn't return \"undefined\"\r\n  const { slug = \"\" } = context.query\r\n  return await client.fetch(`\r\n    *[_type == \"post\" && slug.current == $slug][0]{title, \"name\": author->name}\r\n  `, { slug })\r\n}\r\n\r\nexport default Post"]},"metadata":{},"sourceType":"module"}