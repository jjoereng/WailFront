{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joakim\\\\wailnofront\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// index.js\nimport Link from 'next/link';\nimport groq from 'groq';\nimport client from '../client';\nimport { propTypes } from '@sanity/block-content-to-react';\n\nconst Index = () => {\n  const {\n    posts = []\n  } = props;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, \"Frontpage\"), posts.map(({\n    _id,\n    title = '',\n    slug = '',\n    _updatedAt = ''\n  }) => slug && __jsx(\"li\", {\n    key: _id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 15\n    }\n  }, __jsx(Link, {\n    href: \"/post/[slug]\",\n    as: `/post/${slug.current}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 19\n    }\n  }, title)), \"(\", new Date(_updatedAt).toDateString(), \")\")));\n};\n\nIndex.getInitialProps = async () => ({\n  posts: await client.fetch(groq`\n    *[_type == \"post\" && publishedAt < now()]|order(publishedAt desc)\n  `)\n});\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/Joakim/wailnofront/pages/index.js"],"names":["Link","groq","client","propTypes","Index","posts","props","map","_id","title","slug","_updatedAt","current","Date","toDateString","getInitialProps","fetch"],"mappings":";;;AAAA;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,SAAT,QAA0B,gCAA1B;;AACA,MAAMC,KAAK,GAAG,MAAM;AAChB,QAAM;AAACC,IAAAA,KAAK,GAAG;AAAT,MAAeC,KAArB;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEGD,KAAK,CAACE,GAAN,CACC,CAAC;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,KAAK,GAAG,EAAf;AAAmBC,IAAAA,IAAI,GAAG,EAA1B;AAA8BC,IAAAA,UAAU,GAAG;AAA3C,GAAD,KACED,IAAI,IACF;AAAI,IAAA,GAAG,EAAEF,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,cAAX;AAA0B,IAAA,EAAE,EAAG,SAAQE,IAAI,CAACE,OAAQ,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,KAAJ,CADF,CADF,OAII,IAAII,IAAJ,CAASF,UAAT,EAAqBG,YAArB,EAJJ,MAHL,CAFH,CADF;AAiBH,CApBD;;AAsBAV,KAAK,CAACW,eAAN,GAAwB,aAAa;AACnCV,EAAAA,KAAK,EAAE,MAAMH,MAAM,CAACc,KAAP,CAAaf,IAAK;;GAAlB;AADsB,CAAb,CAAxB;;AAKA,eAAeG,KAAf","sourcesContent":["// index.js\r\nimport Link from 'next/link';\r\nimport groq from 'groq';\r\nimport client from '../client';\r\nimport { propTypes } from '@sanity/block-content-to-react';\r\nconst Index = () => {\r\n    const {posts = []} = props;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Frontpage</h1>\r\n        {posts.map(\r\n          ({ _id, title = '', slug = '', _updatedAt = '' }) =>\r\n            slug && (\r\n              <li key={_id}>\r\n                <Link href=\"/post/[slug]\" as={`/post/${slug.current}`}>\r\n                  <a>{title}</a>\r\n                </Link>\r\n                ({new Date(_updatedAt).toDateString()})\r\n              </li>\r\n            )\r\n        )\r\n        }\r\n      </div>\r\n    )\r\n}\r\n\r\nIndex.getInitialProps = async () => ({\r\n  posts: await client.fetch(groq`\r\n    *[_type == \"post\" && publishedAt < now()]|order(publishedAt desc)\r\n  `)\r\n})\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}