{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Joakim\\\\wailnofront\\\\pages\\\\epk.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"*[_type == \\\"epk\\\"]{\\n  name,\\n  title,\\n  body\\n}\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n// epk.js\nimport Link from 'next/link';\nimport groq from 'groq';\nimport client from '../client';\nimport BlockContent from '@sanity/block-content-to-react'; //styles\n//import './epk.sass';\n\nvar EPK = function EPK(props) {\n  var _props, _props$title, _props$body;\n\n  var _title$body = (_props = props, _props$title = _props.title, title = _props$title === void 0 ? 'Missing title' : _props$title, _props$body = _props.body, body = _props$body === void 0 ? [] : _props$body, _props),\n      _title$body$epkdata = _title$body.epkdata,\n      epkdata = _title$body$epkdata === void 0 ? {} : _title$body$epkdata;\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, \"title \", title, __jsx(BlockContent, {\n    blocks: body,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }));\n};\n\n_c = EPK;\nvar query = groq(_templateObject());\nEPK.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return client.fetch(query);\n\n        case 2:\n          _context.t0 = _context.sent;\n          return _context.abrupt(\"return\", {\n            epkdata: _context.t0\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default EPK;\n\nvar _c;\n\n$RefreshReg$(_c, \"EPK\");","map":{"version":3,"sources":["C:/Users/Joakim/wailnofront/pages/epk.js"],"names":["Link","groq","client","BlockContent","EPK","props","title","body","epkdata","query","getInitialProps","fetch"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,YAAP,MAAyB,gCAAzB,C,CAEA;AACA;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,KAAD,EAAW;AAAA;;AAAA,8BAIjBA,KAJiB,wBAEnBC,KAFmB,EAEnBA,KAFmB,6BAEX,eAFW,sCAGnBC,IAHmB,EAGnBA,IAHmB,4BAGZ,EAHY;AAAA,wCACdC,OADc;AAAA,MACdA,OADc,oCACJ,EADI;;AAMrB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACSF,KADT,EAEE,MAAC,YAAD;AAAc,IAAA,MAAM,EAAEC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAOD,CAbD;;KAAMH,G;AAcN,IAAMK,KAAK,GAAGR,IAAH,mBAAX;AAMAG,GAAG,CAACM,eAAJ,yEAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACLR,MAAM,CAACS,KAAP,CAAaF,KAAb,CADK;;AAAA;AAAA;AAAA;AACpBD,YAAAA,OADoB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;AAIA,eAAeJ,GAAf","sourcesContent":["// epk.js\r\nimport Link from 'next/link';\r\nimport groq from 'groq';\r\nimport client from '../client';\r\nimport BlockContent from '@sanity/block-content-to-react'\r\n\r\n//styles\r\n//import './epk.sass';\r\n\r\nconst EPK = (props) => {\r\n  const {epkdata = {}} = {\r\n    title = 'Missing title',\r\n    body = []\r\n  } = props\r\n\r\n  return (\r\n    <div>\r\n      title {title}\r\n      <BlockContent blocks={body}/>\r\n    </div>\r\n\r\n  );\r\n}\r\nconst query = groq`*[_type == \"epk\"]{\r\n  name,\r\n  title,\r\n  body\r\n}`;\r\n\r\nEPK.getInitialProps = async () => ({ \r\n  epkdata: await client.fetch(query)\r\n});\r\n\r\nexport default EPK;"]},"metadata":{},"sourceType":"module"}