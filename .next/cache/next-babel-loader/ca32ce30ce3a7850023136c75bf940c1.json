{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joakim\\\\wailnofront\\\\pages\\\\epk.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n// epk.js\nimport Link from 'next/link';\nimport groq from 'groq';\nimport client from '../client';\nimport { propTypes } from '@sanity/block-content-to-react'; //styles\n//import './epk.sass';\n\nconst Index = props => {\n  const {\n    posts = []\n  } = props;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, __jsx(BlockContent, _extends({\n    blocks: body,\n    imageOptions: {\n      fit: 'max'\n    }\n  }, client.config(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  })));\n};\n\nIndex.getInitialProps = async () => ({\n  posts: await client.fetch(groq`\n    *[_type == \"epk\"])|\n  `)\n});\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/Joakim/wailnofront/pages/epk.js"],"names":["Link","groq","client","propTypes","Index","props","posts","body","fit","config","getInitialProps","fetch"],"mappings":";;;;;;AAAA;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,SAAT,QAA0B,gCAA1B,C,CAEA;AACA;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB,QAAM;AAACC,IAAAA,KAAK,GAAG;AAAT,MAAgBD,KAAtB;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AACA,IAAA,MAAM,EAAEE,IADR;AAEA,IAAA,YAAY,EAAE;AAAEC,MAAAA,GAAG,EAAE;AAAP;AAFd,KAGIN,MAAM,CAACO,MAAP,EAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF;AASH,CAZD;;AAcAL,KAAK,CAACM,eAAN,GAAwB,aAAa;AACnCJ,EAAAA,KAAK,EAAE,MAAMJ,MAAM,CAACS,KAAP,CAAaV,IAAK;;GAAlB;AADsB,CAAb,CAAxB;;AAKA,eAAeG,KAAf","sourcesContent":["// epk.js\r\nimport Link from 'next/link';\r\nimport groq from 'groq';\r\nimport client from '../client';\r\nimport { propTypes } from '@sanity/block-content-to-react';\r\n\r\n//styles\r\n//import './epk.sass';\r\n\r\nconst Index = (props) => {\r\n    const {posts = [] } = props;\r\n\r\n    return (\r\n      <div>\r\n        <BlockContent\r\n        blocks={body}\r\n        imageOptions={{ fit: 'max' }}\r\n        {...client.config()}\r\n      />\r\n      </div>\r\n    )\r\n}\r\n \r\nIndex.getInitialProps = async () => ({\r\n  posts: await client.fetch(groq`\r\n    *[_type == \"epk\"])|\r\n  `)\r\n})\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}