{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joakim\\\\wailnofront\\\\pages\\\\epk.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// epk.js\nimport Link from 'next/link';\nimport groq from 'groq';\nimport client from '../client';\nimport { propTypes } from '@sanity/block-content-to-react'; //styles\n//import './epk.sass';\n\nconst Index = props => {\n  const {\n    epk = {}\n  } = props;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, \"title \", epk.title);\n};\n\nconst query = groq`*[_type == \"epk\" && publishedAt < now()]{\n  title,\n  body\n}`;\n\nIndex.getInitialProps = async () => ({\n  posts: await client.fetch(query)\n});\n\nexport default Epk;","map":{"version":3,"sources":["C:/Users/Joakim/wailnofront/pages/epk.js"],"names":["Link","groq","client","propTypes","Index","props","epk","title","query","getInitialProps","posts","fetch","Epk"],"mappings":";;;AAAA;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,SAAT,QAA0B,gCAA1B,C,CAEA;AACA;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB,QAAM;AAACC,IAAAA,GAAG,GAAG;AAAP,MAAcD,KAApB;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACSC,GAAG,CAACC,KADb,CADF;AAKH,CARD;;AASA,MAAMC,KAAK,GAAGP,IAAK;;;EAAnB;;AAIAG,KAAK,CAACK,eAAN,GAAwB,aAAa;AACnCC,EAAAA,KAAK,EAAE,MAAMR,MAAM,CAACS,KAAP,CAAaH,KAAb;AADsB,CAAb,CAAxB;;AAGA,eAAeI,GAAf","sourcesContent":["// epk.js\r\nimport Link from 'next/link';\r\nimport groq from 'groq';\r\nimport client from '../client';\r\nimport { propTypes } from '@sanity/block-content-to-react';\r\n\r\n//styles\r\n//import './epk.sass';\r\n\r\nconst Index = (props) => {\r\n    const {epk = {} } = props;\r\n\r\n    return (\r\n      <div>\r\n        title {epk.title}\r\n      </div>\r\n    )\r\n}\r\nconst query = groq`*[_type == \"epk\" && publishedAt < now()]{\r\n  title,\r\n  body\r\n}`\r\nIndex.getInitialProps = async () => ({\r\n  posts: await client.fetch(query)\r\n})\r\nexport default Epk;"]},"metadata":{},"sourceType":"module"}