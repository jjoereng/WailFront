{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joakim\\\\wailnofront\\\\pages\\\\epk.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// epk.js\nimport Link from 'next/link';\nimport groq from 'groq';\nimport client from '../client';\nimport { propTypes } from '@sanity/block-content-to-react'; //styles\n//import './epk.sass';\n\nconst Index = props => {\n  const {\n    posts = []\n  } = props;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, \"EPK\"));\n};\n\nIndex.getInitialProps = async () => ({\n  posts: await client.fetch(groq`\n    *[_type == \"epk\" && publishedAt < now()]\n  `)\n});\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/Joakim/wailnofront/pages/epk.js"],"names":["Link","groq","client","propTypes","Index","props","posts","getInitialProps","fetch"],"mappings":";;;AAAA;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,SAAT,QAA0B,gCAA1B,C,CAEA;AACA;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB,QAAM;AAACC,IAAAA,KAAK,GAAG;AAAT,MAAgBD,KAAtB;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CADF;AAMH,CATD;;AAWAD,KAAK,CAACG,eAAN,GAAwB,aAAa;AACnCD,EAAAA,KAAK,EAAE,MAAMJ,MAAM,CAACM,KAAP,CAAaP,IAAK;;GAAlB;AADsB,CAAb,CAAxB;;AAKA,eAAeG,KAAf","sourcesContent":["// epk.js\r\nimport Link from 'next/link';\r\nimport groq from 'groq';\r\nimport client from '../client';\r\nimport { propTypes } from '@sanity/block-content-to-react';\r\n\r\n//styles\r\n//import './epk.sass';\r\n\r\nconst Index = (props) => {\r\n    const {posts = [] } = props;\r\n\r\n    return (\r\n      <div>\r\n        <h1>EPK</h1>\r\n      \r\n      </div>\r\n    )\r\n}\r\n\r\nIndex.getInitialProps = async () => ({\r\n  posts: await client.fetch(groq`\r\n    *[_type == \"epk\" && publishedAt < now()]\r\n  `)\r\n})\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}