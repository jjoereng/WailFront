{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Joakim\\\\wailnofront\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    *[_type == \\\"post\\\" && publishedAt < now()]|order(publishedAt desc)\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n// index.js\nimport Link from 'next/link';\nimport groq from 'groq';\nimport client from '../client';\nimport { propTypes } from '@sanity/block-content-to-react';\n/*\r\nconst Index = (props) => {\r\n    const {posts = [] } = props;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Frontpage</h1>\r\n        {posts.map(\r\n          ({ _id, title = '', slug = '', _updatedAt = '' }) =>\r\n            slug && (\r\n              <li key={_id}>\r\n                <Link href=\"/post/[slug]\" as={`/post/${slug.current}`}>\r\n                  <a>{title}</a>\r\n                </Link>\r\n                ({new Date(_updatedAt).toDateString()})\r\n              </li>\r\n            )\r\n        )\r\n        }\r\n      </div>\r\n    )\r\n}\r\n*/\n\nimport { useRouter } from 'next/router';\n\nvar Post = function Post() {\n  _s();\n\n  var router = useRouter();\n  return __jsx(\"article\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, router.query.slug));\n};\n\n_s(Post, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Post;\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return client.fetch(groq(_templateObject()));\n\n        case 2:\n          _context.t0 = _context.sent;\n          return _context.abrupt(\"return\", {\n            posts: _context.t0\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/Joakim/wailnofront/pages/index.js"],"names":["Link","groq","client","propTypes","useRouter","Post","router","query","slug","Index","getInitialProps","fetch","posts"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,SAAT,QAA0B,gCAA1B;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACjB,MAAMC,MAAM,GAAGF,SAAS,EAAxB;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,MAAM,CAACC,KAAP,CAAaC,IAAlB,CADF,CADF;AAKD,CARD;;GAAMH,I;UACWD,S;;;KADXC,I;AASNI,KAAK,CAACC,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACTR,MAAM,CAACS,KAAP,CAAaV,IAAb,oBADS;;AAAA;AAAA;AAAA;AACtBW,YAAAA,KADsB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAKA,eAAeH,KAAf","sourcesContent":["// index.js\r\nimport Link from 'next/link';\r\nimport groq from 'groq';\r\nimport client from '../client';\r\nimport { propTypes } from '@sanity/block-content-to-react';\r\n\r\n/*\r\nconst Index = (props) => {\r\n    const {posts = [] } = props;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Frontpage</h1>\r\n        {posts.map(\r\n          ({ _id, title = '', slug = '', _updatedAt = '' }) =>\r\n            slug && (\r\n              <li key={_id}>\r\n                <Link href=\"/post/[slug]\" as={`/post/${slug.current}`}>\r\n                  <a>{title}</a>\r\n                </Link>\r\n                ({new Date(_updatedAt).toDateString()})\r\n              </li>\r\n            )\r\n        )\r\n        }\r\n      </div>\r\n    )\r\n}\r\n*/\r\n\r\nimport { useRouter } from 'next/router'\r\n\r\nconst Post = () => {\r\n  const router = useRouter()\r\n  \r\n  return (\r\n    <article>\r\n      <h1>{router.query.slug}</h1>\r\n    </article>\r\n  )\r\n}\r\nIndex.getInitialProps = async () => ({\r\n  posts: await client.fetch(groq`\r\n    *[_type == \"post\" && publishedAt < now()]|order(publishedAt desc)\r\n  `)\r\n})\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}