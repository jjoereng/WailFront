{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joakim\\\\wailnofront\\\\pages\\\\epk.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// epk.js\nimport Link from 'next/link';\nimport groq from 'groq';\nimport client from '../client';\nimport BlockContent from '@sanity/block-content-to-react';\nimport styles from './epk.module.scss';\nimport imageUrlBuilder from '@sanity/image-url';\n\nconst EPK = props => {\n  const {\n    title = 'Missing title',\n    body = [],\n    pressphotos = [],\n    bios = [],\n    upcomingReleases = []\n  } = props;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    id: styles.epk,\n    class: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    class: \"container-horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    id: styles.epkTitle,\n    class: \"center-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, title)), __jsx(\"div\", {\n    className: styles.wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    id: styles.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, __jsx(BlockContent, {\n    blocks: body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, bios && __jsx(\"div\", {\n    id: styles.downloads,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, \"Bio\"), bios.map(bio => __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, bio.originalFilename)))), upcomingReleases && __jsx(\"div\", {\n    id: styles.upcoming,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, \"Upcoming releases\"), upcomingReleases.map(upcoming => __jsx(\"div\", {\n    className: styles.upcomingItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, __jsx(\"img\", {\n    class: \"responsive\",\n    src: urlFor(upcoming.releaseImage).width(250).url(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 19\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }\n  }, upcoming.releaseName), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }\n  }, \"Release date: \", __jsx(\"span\", {\n    className: styles.releaseDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 38\n    }\n  }, upcoming.releaseDate)), __jsx(\"a\", {\n    href: upcoming.releaseURL,\n    className: styles.upcomingImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }\n  }))))), pressphotos && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, \"Press photos\"), pressphotos.map(pressphoto => __jsx(\"div\", {\n    className: styles.pressPhoto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, __jsx(\"a\", {\n    href: urlFor(pressphoto).url(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, __jsx(\"img\", {\n    class: \"item responsive\",\n    src: urlFor(pressphoto).width(400).url(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }))))))), __jsx(\"img\", {\n    class: \"responsive\",\n    src: \"/images/epkbotimg.jpg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }));\n};\n\nfunction urlFor(source) {\n  return imageUrlBuilder(client).image(source);\n}\n\nconst query = groq`*[title == \"EPK\"][0]{\n  title,\n  body,\n  pressphotos,\n  \"bios\": bios[].asset->{url, originalFilename},\n  upcomingReleases\n}`;\n\nEPK.getInitialProps = async function (context) {\n  // It's important to default the slug so that it doesn't return \"undefined\"\n  const {\n    slug = \"\"\n  } = context.query;\n  return await client.fetch(query, {\n    slug\n  });\n};\n\nexport default EPK;","map":{"version":3,"sources":["C:/Users/Joakim/wailnofront/pages/epk.js"],"names":["Link","groq","client","BlockContent","styles","imageUrlBuilder","EPK","props","title","body","pressphotos","bios","upcomingReleases","epk","epkTitle","wrapper","downloads","map","bio","originalFilename","upcoming","upcomingItem","urlFor","releaseImage","width","url","releaseName","releaseDate","releaseURL","upcomingImage","pressphoto","pressPhoto","source","image","query","getInitialProps","context","slug","fetch"],"mappings":"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","sourcesContent":["// epk.js\r\nimport Link from 'next/link';\r\nimport groq from 'groq';\r\nimport client from '../client';\r\nimport BlockContent from '@sanity/block-content-to-react'\r\n\r\nimport styles from './epk.module.scss';\r\nimport imageUrlBuilder from '@sanity/image-url';\r\n\r\nconst EPK = (props) => {\r\n  const {\r\n    title = 'Missing title',\r\n    body = [],\r\n    pressphotos = [],\r\n    bios = [],\r\n    upcomingReleases = []\r\n\r\n  } = props;\r\n\r\n  return (\r\n    <div>\r\n      <div id={styles.epk} class=\"page\">\r\n        <div class=\"container-horizontal\">\r\n          <h1 id={styles.epkTitle} class=\"center-text\">{title}</h1>\r\n        </div>\r\n        <div className={styles.wrapper}>\r\n          <div id={styles.body}>\r\n            <BlockContent blocks={body}/>\r\n            <div>\r\n          {bios && \r\n            <div id={styles.downloads}>\r\n              <h2>Bio</h2>\r\n              {bios.map(bio => \r\n              <div> \r\n                {bio.originalFilename}\r\n              </div>\r\n              )}\r\n          </div> \r\n          }\r\n          </div>\r\n          {upcomingReleases && \r\n            <div id={styles.upcoming}>\r\n              <h2>Upcoming releases</h2>\r\n              {upcomingReleases.map(upcoming => \r\n              <div className={styles.upcomingItem}>\r\n                  <img  class=\"responsive\" src={urlFor(upcoming.releaseImage).width(250).url()}/>\r\n                  <div>{upcoming.releaseName}</div>\r\n                  <div>Release date: <span className={styles.releaseDate}>{upcoming.releaseDate}</span></div>\r\n                  <a href={upcoming.releaseURL} className={styles.upcomingImage}>\r\n                  </a>\r\n              </div>\r\n              )}\r\n          </div> \r\n          }\r\n         \r\n          </div>\r\n          \r\n          {pressphotos && \r\n            <div>\r\n              <h2>Press photos</h2>\r\n              {pressphotos.map(pressphoto => \r\n              <div className={styles.pressPhoto}>\r\n              <a href={urlFor(pressphoto).url()}>\r\n                <img class=\"item responsive\" src={urlFor(pressphoto).width(400).url()}/>\r\n              </a>\r\n              </div>\r\n              )}\r\n          </div> \r\n          }\r\n        </div>\r\n      </div>\r\n      <img class=\"responsive\" src=\"/images/epkbotimg.jpg\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction urlFor (source) {\r\n  return imageUrlBuilder(client).image(source)\r\n}\r\n\r\n\r\nconst query = groq`*[title == \"EPK\"][0]{\r\n  title,\r\n  body,\r\n  pressphotos,\r\n  \"bios\": bios[].asset->{url, originalFilename},\r\n  upcomingReleases\r\n}`;\r\n\r\nEPK.getInitialProps = async function (context) {\r\n  // It's important to default the slug so that it doesn't return \"undefined\"\r\n  const { slug = \"\" } = context.query;\r\n  return await client.fetch(query, {slug});\r\n}\r\n\r\nexport default EPK;"]},"metadata":{},"sourceType":"module"}