{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joakim\\\\wailnofront\\\\pages\\\\epk.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// epk.js\nimport Link from 'next/link';\nimport groq from 'groq';\nimport client from '../client';\nimport BlockContent from '@sanity/block-content-to-react';\nimport styles from './epk.module.scss';\nimport imageUrlBuilder from '@sanity/image-url';\n\nconst EPK = props => {\n  const {\n    title = 'Missing title',\n    body = [],\n    pressphotos = [],\n    pressphotosTitle = 'Missing title'\n  } = props;\n  return __jsx(\"div\", {\n    class: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    class: \"container-horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(BlockContent, {\n    blocks: body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), pressphotos && __jsx(\"div\", {\n    class: \"container-vetical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, pressphotos.map(pressphoto => __jsx(\"img\", {\n    class: \"item\",\n    src: urlFor(pressphoto).width(250).url(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 44\n    }\n  })))));\n};\n\nfunction urlFor(source) {\n  return imageUrlBuilder(client).image(source);\n}\n\nconst query = groq`*[title == \"EPK\"][0]{\n  title,\n  body,\n  pressphotos,\n  pressphotosTitle: pressphotos->title\n\n}`;\n\nEPK.getInitialProps = async function (context) {\n  // It's important to default the slug so that it doesn't return \"undefined\"\n  const {\n    slug = \"\"\n  } = context.query;\n  return await client.fetch(query, {\n    slug\n  });\n};\n\nexport default EPK;","map":{"version":3,"sources":["C:/Users/Joakim/wailnofront/pages/epk.js"],"names":["Link","groq","client","BlockContent","styles","imageUrlBuilder","EPK","props","title","body","pressphotos","pressphotosTitle","map","pressphoto","urlFor","width","url","source","image","query","getInitialProps","context","slug","fetch"],"mappings":";;;AAAA;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAIA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AACrB,QAAM;AACJC,IAAAA,KAAK,GAAG,eADJ;AAEJC,IAAAA,IAAI,GAAG,EAFH;AAGJC,IAAAA,WAAW,GAAG,EAHV;AAIJC,IAAAA,gBAAgB,GAAG;AAJf,MAKFJ,KALJ;AAOA,SACE;AAAK,IAAA,KAAK,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAC,sBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAc,IAAA,MAAM,EAAEE,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGC,WAAW,IAEV;AAAK,IAAA,KAAK,EAAC,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,WAAW,CAACE,GAAZ,CAAgBC,UAAU,IAAI;AAAK,IAAA,KAAK,EAAC,MAAX;AAAkB,IAAA,GAAG,EAAEC,MAAM,CAACD,UAAD,CAAN,CAAmBE,KAAnB,CAAyB,GAAzB,EAA8BC,GAA9B,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9B,CADH,CAJJ,CADF,CADF;AAaD,CArBD;;AAuBA,SAASF,MAAT,CAAiBG,MAAjB,EAAyB;AACvB,SAAOZ,eAAe,CAACH,MAAD,CAAf,CAAwBgB,KAAxB,CAA8BD,MAA9B,CAAP;AACD;;AAGD,MAAME,KAAK,GAAGlB,IAAK;;;;;;EAAnB;;AAQAK,GAAG,CAACc,eAAJ,GAAsB,gBAAgBC,OAAhB,EAAyB;AAC7C;AACA,QAAM;AAAEC,IAAAA,IAAI,GAAG;AAAT,MAAgBD,OAAO,CAACF,KAA9B;AACA,SAAO,MAAMjB,MAAM,CAACqB,KAAP,CAAaJ,KAAb,EAAoB;AAACG,IAAAA;AAAD,GAApB,CAAb;AACD,CAJD;;AAMA,eAAehB,GAAf","sourcesContent":["// epk.js\r\nimport Link from 'next/link';\r\nimport groq from 'groq';\r\nimport client from '../client';\r\nimport BlockContent from '@sanity/block-content-to-react'\r\nimport styles from './epk.module.scss';\r\nimport imageUrlBuilder from '@sanity/image-url';\r\n\r\n\r\n\r\nconst EPK = (props) => {\r\n  const {\r\n    title = 'Missing title',\r\n    body = [],\r\n    pressphotos = [],\r\n    pressphotosTitle = 'Missing title'\r\n  } = props;\r\n\r\n  return (\r\n    <div class=\"primary\">\r\n      <div class=\"container-horizontal\">\r\n        <BlockContent blocks={body}/>\r\n        {pressphotos && \r\n        \r\n          <div class=\"container-vetical\">\r\n            {pressphotos.map(pressphoto => <img class=\"item\" src={urlFor(pressphoto).width(250).url()}/>)}\r\n         </div> \r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction urlFor (source) {\r\n  return imageUrlBuilder(client).image(source)\r\n}\r\n\r\n\r\nconst query = groq`*[title == \"EPK\"][0]{\r\n  title,\r\n  body,\r\n  pressphotos,\r\n  pressphotosTitle: pressphotos->title\r\n\r\n}`;\r\n\r\nEPK.getInitialProps = async function (context) {\r\n  // It's important to default the slug so that it doesn't return \"undefined\"\r\n  const { slug = \"\" } = context.query;\r\n  return await client.fetch(query, {slug});\r\n}\r\n\r\nexport default EPK;"]},"metadata":{},"sourceType":"module"}